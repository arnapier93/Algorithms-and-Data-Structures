#1 implement the makeHeap algorithm on case n = 100 and print with depths

depth 0:  100
depth 1:  100, 100
depth 2:  99, 91, 98, 98
depth 3:  91, 99, 90, 89, 91, 81, 95, 60
depth 4:  78, 82, 97, 89, 89, 87, 74, 52, 66, 89, 56, 71, 92, 48, 48, 56
depth 5:  54, 50, 33, 53, 59, 72, 76, 79, 65, 81, 78, 69, 59, 45, 44, 31, 63, 63, 84, 72, 28, 54, 67, 2, 11, 76, 2, 28, 23, 2, 47, 37
depth 6:  38, 26, 10, 3, 5, 30, 12, 28, 30, 0, 40, 37, 2, 14, 69, 33, 33, 47, 31, 72, 11, 34, 11, 8, 48, 37, 0, 22, 15, 36, 27, 31, 18, 20, 21, 5, 42

# 2 combine makeHeap and removeKeys to implement a heapSort function to sort 2 arrays one with n = 200 elements and one with n = 500

array of n = 200
[0, 0, 1, 1, 2, 3, 3, 4, 4, 4, 5, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 10, 11, 11, 11, 13, 13, 13, 15, 15, 15, 15, 15, 16, 16, 16, 17, 17, 17, 18, 18, 18, 19, 19, 20, 20, 21, 22, 23, 23, 24, 24, 26, 26, 27, 27, 27, 27, 28, 30, 31, 32, 32, 32, 33, 33, 34, 34, 34, 35, 35, 35, 35, 36, 36, 37, 37, 37, 39, 40, 41, 41, 41, 41, 42, 43, 43, 43, 44, 44, 44, 45, 45, 45, 47, 47, 47, 47, 49, 49, 49, 50, 50, 51, 52, 52, 52, 52, 53, 53, 54, 55, 56, 56, 57, 58, 59, 59, 59, 59, 61, 61, 61, 61, 62, 62, 63, 63, 64, 65, 66, 66, 66, 67, 68, 68, 68, 70, 70, 71, 71, 71, 71, 71, 71, 72, 73, 74, 74, 75, 76, 77, 77, 79, 79, 80, 81, 82, 83, 84, 84, 84, 84, 84, 85, 85, 85, 86, 86, 86, 87, 87, 88, 88, 89, 89, 90, 90, 91, 91, 92, 93, 94, 94, 94, 96, 96, 96, 97, 97, 98, 98, 98, 99, 99, 99, 100, 100]

array of n = 500
[0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 15, 15, 15, 15, 15, 15, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 21, 21, 22, 22, 22, 22, 24, 24, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 34, 34, 34, 34, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 41, 41, 41, 41, 41, 42, 42, 42, 42, 42, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 46, 46, 46, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51, 52, 52, 52, 52, 52, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 55, 55, 55, 56, 56, 57, 58, 58, 58, 59, 59, 59, 61, 61, 62, 62, 63, 63, 63, 64, 64, 64, 65, 65, 65, 65, 66, 66, 66, 66, 66, 66, 67, 68, 68, 68, 68, 68, 69, 69, 69, 69, 70, 70, 70, 71, 71, 71, 71, 71, 71, 72, 72, 72, 73, 73, 73, 73, 73, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 75, 75, 75, 76, 76, 76, 76, 76, 76, 77, 77, 77, 77, 78, 78, 78, 79, 80, 80, 80, 80, 81, 81, 81, 82, 82, 82, 82, 82, 82, 83, 83, 83, 83, 84, 84, 84, 84, 85, 85, 85, 85, 86, 86, 86, 86, 86, 87, 87, 87, 87, 87, 87, 87, 87, 87, 88, 88, 88, 88, 88, 88, 88, 88, 89, 89, 89, 90, 90, 90, 90, 90, 90, 91, 91, 91, 91, 91, 92, 92, 92, 92, 92, 92, 92, 93, 93, 93, 94, 94, 94, 94, 94, 95, 95, 96, 96, 96, 96, 96, 96, 97, 97, 97, 97, 98, 99, 99, 99, 99, 99, 99, 99, 99, 99, 100, 100, 100, 100, 100, 100, 100]